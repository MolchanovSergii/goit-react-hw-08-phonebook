{"version":3,"file":"static/js/415.c5fa0547.chunk.js","mappings":"qMAEaA,E,QAAkBC,GAAAA,IAAH,mN,SCS5B,EARe,WACb,OACE,SAACD,EAAD,WACE,SAAC,KAAD,CAAWE,MAAM,UAAUC,OAAQ,IAAKC,MAAO,OAGpD,C,wDCUD,IAjBqB,SAAC,GAAc,IAC1BC,EADyB,EAAXC,KACdD,QACFE,GAAWC,EAAAA,EAAAA,MAEjB,OACE,wBACGH,EAAQI,KAAI,SAAAC,GAAM,OACjB,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAOE,IAAMC,MAAO,CAAEC,KAAMP,GAAjD,SACGG,EAAOK,SAFHL,EAAOE,GADC,KASxB,C,kICiBD,UA3Ba,WACX,OAAwBI,EAAAA,EAAAA,UAAS,MAAjC,eAAOV,EAAP,KAAaW,EAAb,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,2FAChBF,GAAa,GADG,mBAGQG,EAAAA,EAAAA,MAHR,OAGRC,EAHQ,OAKdN,EAAQM,GACRJ,GAAa,GANC,gDAQdK,EAAAA,OAAAA,QAAA,uCAA+C,KAAMC,UARvC,yDAAH,qDAWfJ,GACD,GAAE,KAGD,6BACE,wBAAI,mBACHH,GAAY,SAAC,IAAD,IAAaZ,IAAQ,SAAC,IAAD,CAAcA,KAAMA,MAG3D,C,kMC9BDoB,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAET,SAAeL,IAAtB,4CAAO,OAAP,oBAAO,0FACc,qBADd,SAEkBI,EAAAA,EAAAA,IAAA,UADJ,qBACI,mCACmBC,IAHrC,cAECC,EAFD,yBAKEA,EAAStB,MALX,kEAQA,SAAeuB,EAAtB,+CAAO,OAAP,oBAAO,WAA6BC,GAA7B,gFACCC,EADD,gBACuBD,GADvB,SAEkBJ,EAAAA,EAAAA,IAAA,UAClBK,EADkB,mCACmBJ,IAHrC,cAECC,EAFD,yBAKEA,EAAStB,MALX,kEAQA,SAAe0B,EAAtB,+CAAO,OAAP,oBAAO,WAAmCF,GAAnC,gFACCC,EADD,gBACuBD,EADvB,qBAEkBJ,EAAAA,EAAAA,IAAA,UAClBK,EADkB,mCACmBJ,IAHrC,cAECC,EAFD,yBAKEA,EAAStB,MALX,kEAQA,SAAe2B,EAAtB,+CAAO,OAAP,oBAAO,WAAoCH,GAApC,gFACCC,EADD,gBACuBD,EADvB,qBAEkBJ,EAAAA,EAAAA,IAAA,UAClBK,EADkB,mCACmBJ,IAHrC,cAECC,EAFD,yBAKEA,EAAStB,MALX,kEAQA,SAAe4B,EAAtB,+CAAO,OAAP,oBAAO,WAAmCC,GAAnC,qGAEkBT,EAAAA,EAAAA,IAAA,UAFlB,eAEkB,kBACES,EADF,8DAC6DR,IAH/E,cAECC,EAFD,yBAKEA,EAAStB,MALX,kE","sources":["components/Loader/LoaderStyled.js","components/Loader/Loader.jsx","components/TrendingList/TrendingList.jsx","pages/Home.jsx","services/fetchApi.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const LoaderContainer = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  /* width: 100vw; */\n  /* height: 100vh; */\n`;\n","import { ThreeDots } from 'react-loader-spinner';\nimport { LoaderContainer } from './LoaderStyled';\n\nconst Loader = () => {\n  return (\n    <LoaderContainer>\n      <ThreeDots color=\"#3f51b5\" height={200} width={200} />\n    </LoaderContainer>\n  );\n};\n\nexport default Loader;\n","import { Link, useLocation } from 'react-router-dom';\n\nconst TrendingList = ({ data }) => {\n  const { results } = data;\n  const location = useLocation();\n\n  return (\n    <ul>\n      {results.map(result => (\n        <li key={result.id}>\n          <Link to={`/movies/${result.id}`} state={{ from: location }}>\n            {result.title}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default TrendingList;\n","import { useState, useEffect } from 'react';\nimport { fetchApi } from 'services/fetchApi';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nimport TrendingList from 'components/TrendingList/TrendingList';\nimport Loader from 'components/Loader/Loader';\n\nconst Home = () => {\n  const [data, setData] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setIsLoading(true);\n      try {\n        const dataApi = await fetchApi();\n\n        setData(dataApi);\n        setIsLoading(false);\n      } catch (error) {\n        Notify.failure(`Sorry, something went wrong. ${error.message}`);\n      }\n    };\n    fetchData();\n  }, []);\n\n  return (\n    <main>\n      <h1>Trending Today</h1>\n      {isLoading ? <Loader /> : data && <TrendingList data={data} />}\n    </main>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'f6352dcc8bb6548bb49d551f5d46c756';\n\nexport async function fetchApi() {\n  const END_POINTS = 'trending/movie/day';\n  const response = await axios.get(\n    `${END_POINTS}?language=en-US&api_key=${API_KEY}`\n  );\n  return response.data;\n}\n\nexport async function fetchApiMovie(movieId) {\n  const END_POINTS = `movie/${movieId}`;\n  const response = await axios.get(\n    `${END_POINTS}?language=en-US&api_key=${API_KEY}`\n  );\n  return response.data;\n}\n\nexport async function fetchApiMovieActors(movieId) {\n  const END_POINTS = `movie/${movieId}/credits`;\n  const response = await axios.get(\n    `${END_POINTS}?language=en-US&api_key=${API_KEY}`\n  );\n  return response.data;\n}\n\nexport async function fetchApiMovieReviews(movieId) {\n  const END_POINTS = `movie/${movieId}/reviews`;\n  const response = await axios.get(\n    `${END_POINTS}?language=en-US&api_key=${API_KEY}`\n  );\n  return response.data;\n}\n\nexport async function fetchApiMovieSearch(query) {\n  const END_POINTS = `search/movie`;\n  const response = await axios.get(\n    `${END_POINTS}?query=${query}&include_adult=false&language=en-US&page=1&api_key=${API_KEY}`\n  );\n  return response.data;\n}\n"],"names":["LoaderContainer","styled","color","height","width","results","data","location","useLocation","map","result","to","id","state","from","title","useState","setData","isLoading","setIsLoading","useEffect","fetchData","fetchApi","dataApi","Notify","message","axios","API_KEY","response","fetchApiMovie","movieId","END_POINTS","fetchApiMovieActors","fetchApiMovieReviews","fetchApiMovieSearch","query"],"sourceRoot":""}