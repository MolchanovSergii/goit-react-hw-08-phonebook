{"version":3,"file":"static/js/957.dbf151a1.chunk.js","mappings":"qMAEaA,E,QAAkBC,GAAAA,IAAH,mN,SCS5B,EARe,WACb,OACE,SAACD,EAAD,WACE,SAAC,KAAD,CAAWE,MAAM,UAAUC,OAAQ,IAAKC,MAAO,OAGpD,C,iQCLYC,EAAOJ,EAAAA,GAAAA,IAAH,8KAQJK,EAAcL,EAAAA,GAAAA,IAAH,yCAGXM,EAAUN,EAAAA,GAAAA,IAAH,sBAEPO,EAAaP,EAAAA,GAAAA,GAAH,iGAOVQ,GAAQR,EAAAA,EAAAA,IAAOS,EAAAA,IAAPT,CAAH,+CAILU,GAAWV,EAAAA,EAAAA,IAAOW,EAAAA,GAAPX,CAAH,iOAYRY,EAAcZ,EAAAA,GAAAA,IAAH,0D,qMCkBxB,EA7CkB,SAAC,GAAc,IAAD,IAAXa,EAAW,EAAXA,KACXC,EACND,EADMC,SAAUC,EAChBF,EADgBE,OAAQC,EACxBH,EADwBG,YAAaC,EACrCJ,EADqCI,MAAOC,EAC5CL,EAD4CK,aAAcC,EAC1DN,EAD0DM,aAGtDC,EAAOC,SAASH,EAAaI,MAAM,KAAK,IACxCC,GAAWC,EAAAA,EAAAA,MAEXC,GAAeC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,WAEpD,OACE,iCACE,UAAC,KAAD,CAAUC,GAAIJ,EAAaK,QAA3B,WACE,SAAC,KAAD,IAAS,cAGX,UAAC,KAAD,YACE,SAAC,KAAD,UACGd,GACC,SAAC,KAAD,CACEe,IAAG,UAhBO,mCAgBP,OAAqBf,GACxBgB,IAAI,kBAGN,SAAC,MAAD,CAAaC,KAAM,SAGvB,UAAC,KAAD,YACE,0BACGhB,EAAM,KAAGG,EAAK,QAEjB,yBAAG,gBAAcD,MACjB,wBAAI,cACJ,uBAAIL,KACJ,wBAAI,YACJ,SAAC,KAAD,UACGC,EAAOmB,KAAI,SAAAC,GAAK,OACf,wBAAoBA,EAAMC,MAAjBD,EAAME,GADA,cAQ5B,ECLD,EAzCqB,WACnB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAkCE,EAAAA,EAAAA,WAAS,GAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAAwBF,EAAAA,EAAAA,UAAS,MAAjC,eAAO3B,EAAP,KAAa8B,EAAb,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,2FAChBH,GAAa,GADG,mBAGQI,EAAAA,EAAAA,IAAcR,GAHtB,OAGRS,EAHQ,OAKdJ,EAAQI,GACRL,GAAa,GANC,gDAQdM,EAAAA,OAAAA,QAAA,uCAA+C,KAAMC,UARvC,yDAAH,qDAWfJ,GACD,GAAE,CAACP,KAGF,gCACGG,GAAY,SAACS,EAAA,EAAD,IAAarC,IAAQ,SAAC,EAAD,CAAWA,KAAMA,KACnD,SAAC,KAAD,WACE,wBAAI,8BAEN,2BACE,yBACE,SAAC,KAAD,CAAMgB,GAAG,OAAT,SAAgB,YAElB,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,SAAmB,kBAGvB,SAAC,EAAAsB,SAAD,CAAUC,UAAU,SAACF,EAAA,EAAD,IAApB,UACE,SAAC,KAAD,QAIP,C,kMC/CDG,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,0FACc,qBADd,SAEkBF,EAAAA,EAAAA,IAAA,UADJ,qBACI,mCACmBC,IAHrC,cAECE,EAFD,yBAKEA,EAAS3C,MALX,kEAQA,SAAeiC,EAAtB,+CAAO,OAAP,oBAAO,WAA6BR,GAA7B,gFACCmB,EADD,gBACuBnB,GADvB,SAEkBe,EAAAA,EAAAA,IAAA,UAClBI,EADkB,mCACmBH,IAHrC,cAECE,EAFD,yBAKEA,EAAS3C,MALX,kEAQA,SAAe6C,EAAtB,+CAAO,OAAP,oBAAO,WAAmCpB,GAAnC,gFACCmB,EADD,gBACuBnB,EADvB,qBAEkBe,EAAAA,EAAAA,IAAA,UAClBI,EADkB,mCACmBH,IAHrC,cAECE,EAFD,yBAKEA,EAAS3C,MALX,kEAQA,SAAe8C,EAAtB,+CAAO,OAAP,oBAAO,WAAoCrB,GAApC,gFACCmB,EADD,gBACuBnB,EADvB,qBAEkBe,EAAAA,EAAAA,IAAA,UAClBI,EADkB,mCACmBH,IAHrC,cAECE,EAFD,yBAKEA,EAAS3C,MALX,kEAQA,SAAe+C,EAAtB,+CAAO,OAAP,oBAAO,WAAmCC,GAAnC,qGAEkBR,EAAAA,EAAAA,IAAA,UAFlB,eAEkB,kBACEQ,EADF,8DAC6DP,IAH/E,cAECE,EAFD,yBAKEA,EAAS3C,MALX,kE","sources":["components/Loader/LoaderStyled.js","components/Loader/Loader.jsx","components/MovieCard/MovieCardStyled.js","components/MovieCard/MovieCard.jsx","pages/MovieDetails.jsx","services/fetchApi.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const LoaderContainer = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  /* width: 100vw; */\n  /* height: 100vh; */\n`;\n","import { ThreeDots } from 'react-loader-spinner';\nimport { LoaderContainer } from './LoaderStyled';\n\nconst Loader = () => {\n  return (\n    <LoaderContainer>\n      <ThreeDots color=\"#3f51b5\" height={200} width={200} />\n    </LoaderContainer>\n  );\n};\n\nexport default Loader;\n","import styled from 'styled-components';\nimport { BsArrowLeftSquare } from 'react-icons/bs';\nimport { Link } from 'react-router-dom';\n\nexport const Card = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  gap: 12px;\n  margin-bottom: 16px;\n  border-bottom: 1px solid black;\n`;\nexport const MoviePoster = styled.img`\n  width: 200px;\n`;\nexport const Wrapper = styled.div``;\n\nexport const GenresList = styled.ul`\n  display: flex;\n  list-style: none;\n  padding-left: 0;\n  gap: 12px;\n`;\n\nexport const Arrow = styled(BsArrowLeftSquare)`\n  margin-right: 10px;\n`;\n\nexport const LinkBack = styled(Link)`\n  display: flex;\n  align-items: center;\n  padding: 8px 16px;\n  margin-bottom: 10px;\n  text-decoration: none;\n  width: 100px;\n  border: 1px solid tomato;\n  border-radius: 5px;\n  color: tomato;\n`;\n\nexport const TitleBottom = styled.div`\n  border-bottom: 1px solid black;\n`;\n","import { useRef } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { BsCardImage } from 'react-icons/bs';\n\nimport {\n  MoviePoster,\n  Card,\n  Wrapper,\n  GenresList,\n  Arrow,\n  LinkBack,\n} from './MovieCardStyled';\n\nconst MovieCard = ({ data }) => {\n  const { overview, genres, poster_path, title, release_date, vote_average } =\n    data;\n  const baseImagePath = 'https://image.tmdb.org/t/p/w500';\n  const year = parseInt(release_date.split('-')[0]);\n  const location = useLocation();\n\n  const backLinkHref = useRef(location.state?.from ?? '/movies');\n\n  return (\n    <>\n      <LinkBack to={backLinkHref.current}>\n        <Arrow />\n        Go Back\n      </LinkBack>\n      <Card>\n        <Wrapper>\n          {poster_path ? (\n            <MoviePoster\n              src={`${baseImagePath}${poster_path}`}\n              alt=\"Movie Poster\"\n            />\n          ) : (\n            <BsCardImage size={200} />\n          )}\n        </Wrapper>\n        <Wrapper>\n          <h2>\n            {title} ({year})\n          </h2>\n          <p>User Rating: {vote_average}</p>\n          <h3>Overview</h3>\n          <p>{overview}</p>\n          <h3>Genres</h3>\n          <GenresList>\n            {genres.map(genre => (\n              <li key={genre.id}>{genre.name}</li>\n            ))}\n          </GenresList>\n        </Wrapper>\n      </Card>\n    </>\n  );\n};\n\nexport default MovieCard;\n","import { useParams, Link, Outlet } from 'react-router-dom';\nimport { useEffect, useState, Suspense } from 'react';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nimport { fetchApiMovie } from 'services/fetchApi';\n\nimport Loader from 'components/Loader/Loader';\nimport MovieCard from 'components/MovieCard/MovieCard';\nimport { TitleBottom } from 'components/MovieCard/MovieCardStyled';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [isLoading, setIsLoading] = useState(false);\n  const [data, setData] = useState(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setIsLoading(true);\n      try {\n        const dataApi = await fetchApiMovie(movieId);\n\n        setData(dataApi);\n        setIsLoading(false);\n      } catch (error) {\n        Notify.failure(`Sorry, something went wrong. ${error.message}`);\n      }\n    };\n    fetchData();\n  }, [movieId]);\n\n  return (\n    <>\n      {isLoading ? <Loader /> : data && <MovieCard data={data} />}\n      <TitleBottom>\n        <h3>Additional information</h3>\n      </TitleBottom>\n      <ul>\n        <li>\n          <Link to=\"cast\">Cast</Link>\n        </li>\n        <li>\n          <Link to=\"reviews\">Reviews</Link>\n        </li>\n      </ul>\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'f6352dcc8bb6548bb49d551f5d46c756';\n\nexport async function fetchApi() {\n  const END_POINTS = 'trending/movie/day';\n  const response = await axios.get(\n    `${END_POINTS}?language=en-US&api_key=${API_KEY}`\n  );\n  return response.data;\n}\n\nexport async function fetchApiMovie(movieId) {\n  const END_POINTS = `movie/${movieId}`;\n  const response = await axios.get(\n    `${END_POINTS}?language=en-US&api_key=${API_KEY}`\n  );\n  return response.data;\n}\n\nexport async function fetchApiMovieActors(movieId) {\n  const END_POINTS = `movie/${movieId}/credits`;\n  const response = await axios.get(\n    `${END_POINTS}?language=en-US&api_key=${API_KEY}`\n  );\n  return response.data;\n}\n\nexport async function fetchApiMovieReviews(movieId) {\n  const END_POINTS = `movie/${movieId}/reviews`;\n  const response = await axios.get(\n    `${END_POINTS}?language=en-US&api_key=${API_KEY}`\n  );\n  return response.data;\n}\n\nexport async function fetchApiMovieSearch(query) {\n  const END_POINTS = `search/movie`;\n  const response = await axios.get(\n    `${END_POINTS}?query=${query}&include_adult=false&language=en-US&page=1&api_key=${API_KEY}`\n  );\n  return response.data;\n}\n"],"names":["LoaderContainer","styled","color","height","width","Card","MoviePoster","Wrapper","GenresList","Arrow","BsArrowLeftSquare","LinkBack","Link","TitleBottom","data","overview","genres","poster_path","title","release_date","vote_average","year","parseInt","split","location","useLocation","backLinkHref","useRef","state","from","to","current","src","alt","size","map","genre","name","id","movieId","useParams","useState","isLoading","setIsLoading","setData","useEffect","fetchData","fetchApiMovie","dataApi","Notify","message","Loader","Suspense","fallback","axios","API_KEY","fetchApi","response","END_POINTS","fetchApiMovieActors","fetchApiMovieReviews","fetchApiMovieSearch","query"],"sourceRoot":""}