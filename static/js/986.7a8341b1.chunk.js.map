{"version":3,"file":"static/js/986.7a8341b1.chunk.js","mappings":"qMAEaA,E,QAAkBC,GAAAA,IAAH,mN,SCS5B,EARe,WACb,OACE,SAACD,EAAD,WACE,SAAC,KAAD,CAAWE,MAAM,UAAUC,OAAQ,IAAKC,MAAO,OAGpD,C,wKCQD,EAjBoB,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACrB,OAAKA,EAAQC,QAAQC,QAKnB,8BACGF,EAAQC,QAAQE,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASC,EAApB,EAAoBA,GAApB,OACnB,4BACE,0BAAI,WAASF,EAAO,QACpB,uBAAIC,MAFIC,EADS,OALhB,uBAAG,2CAab,ECiBD,EAvBgB,WACd,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAkCE,EAAAA,EAAAA,WAAS,GAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAAwBF,EAAAA,EAAAA,UAAS,MAAjC,eAAOG,EAAP,KAAaC,EAAb,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,2FAChBJ,GAAa,GADG,mBAGQK,EAAAA,EAAAA,IAAqBT,GAH7B,OAGRU,EAHQ,OAKdJ,EAAQI,GACRN,GAAa,GANC,gDAQdO,EAAAA,OAAAA,QAAA,uCAA+C,KAAMC,UARvC,yDAAH,qDAWfJ,GACD,GAAE,CAACR,KAEG,8BAAGG,GAAY,SAACU,EAAA,EAAD,IAAaR,IAAQ,SAAC,EAAD,CAAaZ,QAASY,KAClE,C,kMC5BDS,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,0FACc,qBADd,SAEkBF,EAAAA,EAAAA,IAAA,UADJ,qBACI,mCACmBC,IAHrC,cAECE,EAFD,yBAKEA,EAASZ,MALX,kEAQA,SAAea,EAAtB,+CAAO,OAAP,oBAAO,WAA6BlB,GAA7B,gFACCmB,EADD,gBACuBnB,GADvB,SAEkBc,EAAAA,EAAAA,IAAA,UAClBK,EADkB,mCACmBJ,IAHrC,cAECE,EAFD,yBAKEA,EAASZ,MALX,kEAQA,SAAee,EAAtB,+CAAO,OAAP,oBAAO,WAAmCpB,GAAnC,gFACCmB,EADD,gBACuBnB,EADvB,qBAEkBc,EAAAA,EAAAA,IAAA,UAClBK,EADkB,mCACmBJ,IAHrC,cAECE,EAFD,yBAKEA,EAASZ,MALX,kEAQA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAAoCT,GAApC,gFACCmB,EADD,gBACuBnB,EADvB,qBAEkBc,EAAAA,EAAAA,IAAA,UAClBK,EADkB,mCACmBJ,IAHrC,cAECE,EAFD,yBAKEA,EAASZ,MALX,kEAQA,SAAegB,EAAtB,+CAAO,OAAP,oBAAO,WAAmCC,GAAnC,qGAEkBR,EAAAA,EAAAA,IAAA,UAFlB,eAEkB,kBACEQ,EADF,8DAC6DP,IAH/E,cAECE,EAFD,yBAKEA,EAASZ,MALX,kE","sources":["components/Loader/LoaderStyled.js","components/Loader/Loader.jsx","components/Reviews/ReviewsCard.jsx","components/Reviews/Reviews.jsx","services/fetchApi.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const LoaderContainer = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  /* width: 100vw; */\n  /* height: 100vh; */\n`;\n","import { ThreeDots } from 'react-loader-spinner';\nimport { LoaderContainer } from './LoaderStyled';\n\nconst Loader = () => {\n  return (\n    <LoaderContainer>\n      <ThreeDots color=\"#3f51b5\" height={200} width={200} />\n    </LoaderContainer>\n  );\n};\n\nexport default Loader;\n","const ReviewsCard = ({ reviews }) => {\n  if (!reviews.results.length) {\n    return <p>We don't have any reviews for this film</p>;\n  }\n\n  return (\n    <>\n      {reviews.results.map(({ author, content, id }) => (\n        <div key={id}>\n          <li>Author: {author}.</li>\n          <p>{content}</p>\n        </div>\n      ))}\n    </>\n  );\n};\n\nexport default ReviewsCard;\n","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nimport { fetchApiMovieReviews } from 'services/fetchApi';\n\nimport Loader from 'components/Loader/Loader';\nimport ReviewsCard from './ReviewsCard';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [isLoading, setIsLoading] = useState(false);\n  const [data, setData] = useState(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setIsLoading(true);\n      try {\n        const dataApi = await fetchApiMovieReviews(movieId);\n\n        setData(dataApi);\n        setIsLoading(false);\n      } catch (error) {\n        Notify.failure(`Sorry, something went wrong. ${error.message}`);\n      }\n    };\n    fetchData();\n  }, [movieId]);\n\n  return <>{isLoading ? <Loader /> : data && <ReviewsCard reviews={data} />}</>;\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'f6352dcc8bb6548bb49d551f5d46c756';\n\nexport async function fetchApi() {\n  const END_POINTS = 'trending/movie/day';\n  const response = await axios.get(\n    `${END_POINTS}?language=en-US&api_key=${API_KEY}`\n  );\n  return response.data;\n}\n\nexport async function fetchApiMovie(movieId) {\n  const END_POINTS = `movie/${movieId}`;\n  const response = await axios.get(\n    `${END_POINTS}?language=en-US&api_key=${API_KEY}`\n  );\n  return response.data;\n}\n\nexport async function fetchApiMovieActors(movieId) {\n  const END_POINTS = `movie/${movieId}/credits`;\n  const response = await axios.get(\n    `${END_POINTS}?language=en-US&api_key=${API_KEY}`\n  );\n  return response.data;\n}\n\nexport async function fetchApiMovieReviews(movieId) {\n  const END_POINTS = `movie/${movieId}/reviews`;\n  const response = await axios.get(\n    `${END_POINTS}?language=en-US&api_key=${API_KEY}`\n  );\n  return response.data;\n}\n\nexport async function fetchApiMovieSearch(query) {\n  const END_POINTS = `search/movie`;\n  const response = await axios.get(\n    `${END_POINTS}?query=${query}&include_adult=false&language=en-US&page=1&api_key=${API_KEY}`\n  );\n  return response.data;\n}\n"],"names":["LoaderContainer","styled","color","height","width","reviews","results","length","map","author","content","id","movieId","useParams","useState","isLoading","setIsLoading","data","setData","useEffect","fetchData","fetchApiMovieReviews","dataApi","Notify","message","Loader","axios","API_KEY","fetchApi","response","fetchApiMovie","END_POINTS","fetchApiMovieActors","fetchApiMovieSearch","query"],"sourceRoot":""}